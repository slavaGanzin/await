#!/usr/bin/env bash
# ![build](https://github.com/slavaGanzin/await/actions/workflows/build.yaml/badge.svg)
./build
echo """# await
$(du -h await | sed 's/\s.*//')b, small memory footprint, single binary that run list of commands in parallel and waits for their termination

<!-- DO NOT CHANGE THIS FILE IS GENERATED BY ./hooks/pre-commit -->

[documentation](https://await-cli.app/)


### linux install
\`\`\`bash
curl https://i.jpillora.com/slavaGanzin/await! | bash
\`\`\`

### macOS install
\`\`\`
curl -L https://github.com/slavaGanzin/await/releases/download/0.9/await-macos -o /usr/local/bin/await
chmod +x /usr/local/bin/await
\`\`\`

# With await you can:
### Action on specific file type changes
\`\`\`bash
await 'stat **.c' --change --forever --exec 'gcc *.c -o await -lpthread'
# you can filter with:
\`stat --format '%n %z' **; | grep -v node_modules\`
\`\`\`

<img src='demo/7.gif' width='100%'></img>


### Wait for FAANG to fail
\`\`\`bash
await 'whois facebook.com' \\
      'nslookup apple.com' \\
      'dig +short amazon.com' \\
      'sleep 1 | telnet netflix.com 443 2>/dev/null' \\
      'http google.com' --fail
\`\`\`

<img src='demo/1.gif' width='100%'></img>


### Notify yourself when your site down
\`\`\`bash
await \"curl 'https://whatnot.ai' &>/dev/null && echo UP || echo DOWN\" \\
      --forever --change --exec \"ntfy send 'whatnot.ai \1'\"
\`\`\`

<img src='demo/2.gif' width='100%'></img>


### Use as [concurrently](https://github.com/kimmobrunfeldt/concurrently)
\`\`\`bash
await \"stylus --watch --compress --out /home/vganzin/work/whatnot/front /home/vganzin/work/whatnot/front/index.styl\" \\
      \"pug /home/vganzin/work/whatnot/front/index.pug --out /home/vganzin/work/whatnot/front --watch --pretty 2>/dev/null\" --forever --stdout --silent
\`\`\`

<img src='demo/3.gif' width='100%'></img>


### [Substitute while substituting](https://memegenerator.net/img/instances/48173775.jpg)
\`\`\`bash
await 'echo -n 10' 'echo -n \$RANDOM' 'expr \1 + \2' --exec 'echo \3' --forever --silent
\`\`\`

<img src='demo/4.gif' width='100%'></img>

### Furiously wait for new iPhone in background process
\`\`\`bash
await 'curl \"https://www.apple.com/iphone/\" -s | pup \".hero-eyebrow text{}\" | grep -v 12' --interval 1000 --change --daemon --exec 'ntfy send \"\1\"'
\`\`\`

<img src='demo/5.gif' width='100%'></img>

### Restart database and connect immediately after it become fully functional
\`\`\`bash
sudo systemctl restart redis; await 'socat -u OPEN:/dev/null UNIX-CONNECT:/tmp/redis.sock' --exec 'redis-cli -s /tmp/redis.sock'
\`\`\`

<img src='demo/6.gif' width='100%'></img>


## --help
\`\`\`bash
$(./await --help)

\`\`\`
""" > README.md
git add README.md
cp await /usr/local/bin/await
